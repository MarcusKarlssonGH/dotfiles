Config TODO

general
  sessions:
    tmux or nvim?

nvim
  bufferline: what do we want/need here?
    mini.tabline
    tabline.nvm
    bufferline.nvm
  NvimTree
    refresh
    open to show current file
    width?
  options/settings
    wildmode
  other
    vim-test
    editor-config
    renamer
    mini.starter
    mini.sessions
    mini.cursorword
  tidy/'mini.trailspace'
  nvim-ts-rainbow
  pairing
    mini.pairs
    autopairs
    smartpairs
    pears
  status
    mini.statusline
    lualine
    lsp-status

ZSH
  Theme
    git time
    git sha?
    brackets?
    auto correction colors
    color of x in git
  Aliases?
  fuzzy search history
  vim bindings?
  Other bindings?


bazel
  what to test:
    functional
    cg, qac, show/update warnings
  scope:
    smalles/nearest (component)
    domain function

Common sessions
  private
    kattis
    aoc
    dotfiles
  work
    TsrMonitor
    Tracker
    // it would be good to fzf over (some) folders in fdMain and open an nvim session there
    // To me, this makes more sense to have in tmux? would we want a different session for this, or just a different window?
    // current workflow says window?







# function _git_time_since_commit() {
#   local last_commit now seconds_since_last_commit
#   local minutes hours days years commit_age
#   # Only proceed if there is actually a commit.
#   if last_commit=$(git log --pretty=format:'%at' -1 2> /dev/null); then
#     now=$(date +%s)
#     seconds_since_last_commit=$((now-last_commit))
#
#     # Totals
#     minutes=$((seconds_since_last_commit / 60))
#     hours=$((minutes / 60))
#     days=$((hours / 24))
#     years=$((days / 365))
#
#     if [[ $years -gt 0 ]]; then
#       commit_age="${years}y$((days % 365 ))d"
#     elif [[ $days -gt 0 ]]; then
#       commit_age="${days}d$((hours % 24))h"
#     elif [[ $hours -gt 0 ]]; then
#       commit_age+="${hours}h$(( minutes % 60 ))m"
#     else
#       commit_age="${minutes}m"
#     fi
#
#     echo "${ZSH_THEME_GIT_TIME_SINCE_COMMIT_NEUTRAL}${commit_age}%{$reset_color%}"
#   fi
# }
